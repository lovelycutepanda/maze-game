/* This is the header file for the Breadth-First search (BFS) agent.
 * BFS algorithm goes through all neighbouring grids of visited grids layer by layer.
 * Since the maze generated by this maze app does not contain any loop, I simply store the
 * parent of each grid instead of the entire path for lower spatial complexity.
 * The complete path is then retrieved by tracing the parents back from the goal to the start.
 */


#include "Solver.h"
#include <vector>

#ifndef BFSSOLVER_H
#define BFSSOLVER_H

class BFSSolver : public Solver {
public:
    BFSSolver(const int, const int, std::vector<std::vector<bool>>&, 
              std::vector<std::vector<bool>>&, MachineBoard*);
    virtual void solve();

private:
    // stores previous grid
    std::vector<std::vector<std::pair<int, int>>> parent;
    void BFS();
    void backTrace(std::vector<std::pair<int, int>>&);
};

#endif // BFSSOLVER_H